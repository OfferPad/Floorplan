$button-border-width: $border-width-1;

@keyframes spin { // TODO: move to somewhere else
    0% {
        transform: rotate(0deg)
    }

    to {
        transform: rotate(359deg)
    }
}

@mixin button-variant($background) {
    $hover-background: link-hover-focus($background);
    color: color-yiq($background);
    background-color: $background;
    border-color: $background;
    @include hover {
        background-color: $hover-background;
        border-color: $hover-background;
    }
    @include hover-focus {
        color: color-yiq($background);
    }
    &:disabled,
    &.disabled {
        background-color: $background;
        border-color: $background;
        color: color-yiq($background);
    }
    &:active,
    &.is-active {
        background-color: $hover-background;
        border-color: $hover-background;
        color: color-yiq($background);
        box-shadow: inset 0 3px 8px rgba(0,0,0,0.25);
    }
}

@mixin button-outline-variant($color) {
    background-color: transparent;
    color: $color;
    border-color: $color;
    @include hover {
        background-color: transparentize($color, 0.9);
        border-color: $color;
    }
    @include hover-focus {
        color: $color;
    }
    &:disabled,
    &.disabled {
        background-color: transparent;
        color: $color;
    }
    &:active,
    &.is-active {
        color: $color;
        background-color: transparentize($color, 0.9);
        border-color: $color;
        box-shadow: inset 0 3px 8px rgba(0,0,0,0.25);
    }
}

.c-button {
    display: inline-block;
    text-align: center;
    white-space: nowrap;
    vertical-align: middle;
    user-select: none;
    border: $button-border-width solid transparent;
    @include padding(1/3 1);
    @include typeface(body);
    font-weight: weight(semibold);
    font-size: 1rem;
    line-height: 1.25;
    letter-spacing: 0.01em;
    border-radius: $radius-int;
    cursor: pointer;
    text-decoration: none;
    &:focus {
        outline: 0;
        box-shadow: $focus-shadow;
    }
    &:disabled,
    &.disabled {
        opacity: 0.65;
        cursor: not-allowed;
        box-shadow: none;
    }
    &:active,
    &.is-active {
        box-shadow: none;
    }
    &--small {
        @include font-size(xs);
    }
    &--large {
        @include font-size(l);
    }
    &--full-width {
        width: 100%;
    }
    &__subtext {
        display: block;
        font-size: 50%;
        font-weight: weight(normal);
    }
    &--arrow-left::before,
    &--arrow-right::after,
    &--progress::after {
        display: none;
        font-family: "Font Awesome 5 Solid";
    }
    &--arrow-left,
    &--arrow-right {
        .svg-inline--fa {
            transform-style: preserve-3d;
            transition: transform 200ms;
        }
    }
    &--arrow-left {
        .svg-inline--fa {
            margin-right: 0.5em;
        }
        &::before {
            content: '\f30a';
        }
        &:hover {
            .svg-inline--fa {
                transform: translateX(-0.5em);
            }
        }
    }
    &--arrow-right {
        .svg-inline--fa {
            margin-left: 0.5em;
        }
        &::after {
            content: '\f30b';
        }
        &:hover {
            .svg-inline--fa {
                transform: translateX(0.5em);
            }
        }
    }
    &--progress {
        @include padding-left(0.5);
        @include padding-right(0.5);
        .svg-inline--fa {
            margin-left: 0.5em;
            animation: spin 1s infinite steps(8);
        }
        &::after {
            content: '\f110';
        }
    }
}

@each $color, $value in $op-colors-ui {
    .c-button--#{$color} {
        @include button-variant($value);
    }
}

@each $color, $value in $op-colors-ui {
    .c-button-outline--#{$color} {
        @include button-outline-variant($value);
    }
}
